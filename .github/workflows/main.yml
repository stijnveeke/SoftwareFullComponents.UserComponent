# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - softwarefullgateway

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Restore UserComponent dependencies
        run: dotnet restore ./SoftwareFullComponent.UserComponent.csproj 
      - name: Build UserComponent
        run: dotnet build ./SoftwareFullComponent.UserComponent.csproj --no-restore
      - name: Test UserComponent
        run: dotnet test ./SoftwareFullComponent.UserComponent.csproj --no-build --verbosity normal
        
  push-to-hub:
    runs-on: 'ubuntu-latest'
    needs: build
    steps:
    - uses: actions/checkout@v2

    - name: Docker Build & Push Action
      # You may pin to the exact commit or the version.
      # uses: mr-smithers-excellent/docker-build-push@a7fe6652db5c7274374844e81692992f5a2befb9
      uses: mr-smithers-excellent/docker-build-push@v5.6
      with:
        tags: v1, latest, ${{ github.sha }}
        # Name of the Docker image
        image: 3739323298328/user-component
        # Target Docker registry
        registry: docker.io
        # Location of Dockerfile, if not Dockerfile in root directory
        dockerfile: ./Dockerfile
        # Docker registry username
        username: ${{ secrets.DOCKER_USERNAME }}
        # Docker registry password
        password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    needs: push-to-hub
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'softwarefullusercomponent'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_54b8aa73634d433584040e6e063846a3 }}
        images: 'index.docker.io/${{ secrets.AzureAppService_ContainerUsername_450cf79ad5864186b16be2341db47443 }}/user-component:${{ github.sha }}'
  upload-to-sonarcloud:
    name: Upload to sonarcloud
    needs: build
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"stijnveeke_SoftwareFullComponent.UserComponent" /o:"stijnveeke" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build ./SoftwareFullComponent.UserComponent.csproj
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
